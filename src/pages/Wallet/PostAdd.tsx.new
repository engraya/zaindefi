import PagesWrapper from '../../layouts/PagesWrapper';
import { useState, useEffect, useRef } from 'react';
import { SearchSvg, DropDownSvg, RefreshSvg } from '../../Icons/Icons';
import { useNavigate } from 'react-router-dom';

interface Option {
  id: number;
  name: string;
  color: string;
}

function PostAdd() {
  const [isBuyMode, setIsBuyMode] = useState(true);
  const [isFiatDropdownOpen, setIsFiatDropdownOpen] = useState(false);
  const [isCryptoDropdownOpen, setIsCryptoDropdownOpen] = useState(false);
  const [selectedFiat, setSelectedFiat] = useState<Option | null>(null);
  const [selectedCrypto, setSelectedCrypto] = useState<Option | null>(null);
  const [fiatSearchTerm, setFiatSearchTerm] = useState('');
  const [cryptoSearchTerm, setCryptoSearchTerm] = useState('');
  const [price, setPrice] = useState('');
  const [quantity, setQuantity] = useState('');
  const [total, setTotal] = useState('');
  const [minLimit, setMinLimit] = useState('');
  const [maxLimit, setMaxLimit] = useState('');
  const [termsOfTrade, setTermsOfTrade] = useState('');
  const [automaticReply, setAutomaticReply] = useState('');

  const fiatDropdownRef = useRef<HTMLDivElement>(null);
  const cryptoDropdownRef = useRef<HTMLDivElement>(null);
  const navigate = useNavigate();

  useEffect(() => {
    function handleClickOutside(event: MouseEvent) {
      if (fiatDropdownRef.current && !fiatDropdownRef.current.contains(event.target as Node)) {
        setIsFiatDropdownOpen(false);
      }
      if (cryptoDropdownRef.current && !cryptoDropdownRef.current.contains(event.target as Node)) {
        setIsCryptoDropdownOpen(false);
      }
    }

    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  const fiatOptions = [
    { id: 1, name: 'VND', color: 'text-orange-400' },
    { id: 2, name: 'USD', color: 'text-sky-700' },
    { id: 3, name: 'INR', color: 'text-rose-500' },
    { id: 4, name: 'NGN', color: 'text-blue-500' }
  ];

  const cryptoOptions = [
    { id: 1, name: 'BTC', color: 'text-orange-400' },
    { id: 2, name: 'ETH', color: 'text-blue-500' },
    { id: 3, name: 'USDT', color: 'text-green-500' }
  ];

  const filteredFiatOptions = fiatOptions.filter(option =>
    option.name.toLowerCase().includes(fiatSearchTerm.toLowerCase())
  );

  const filteredCryptoOptions = cryptoOptions.filter(option =>
    option.name.toLowerCase().includes(cryptoSearchTerm.toLowerCase())
  );

  const handleConfirmPublishing = () => {
    navigate('/post-confirmation');
  };

  return (
    <PagesWrapper>
      <h3 className="self-stretch justify-start text-gray-200 text-2xl md:text-3xl font-semibold leading-9 px-4 md:px-0">
        Post New Ads
      </h3>
      <div className="self-stretch py-4 md:py-6 px-4 md:px-6 bg-gray-800 rounded-xl outline outline-offset-[-1px] outline-slate-600 inline-flex flex-col justify-start items-center gap-5">
        <div className="w-full md:w-[1096px] inline-flex justify-start items-center gap-6 md:gap-12">
          <div data-property-1="Button group-buy" className="p-2.5 rounded-[9.57px] outline outline-offset-[-1.20px] outline-slate-600 flex justify-start items-start gap-[4.78px]">
            <button
              onClick={() => setIsBuyMode(true)}
              className={`p-2.5 rounded outline outline-offset-[-1.20px] flex justify-center items-center overflow-hidden transition-all duration-200 ${
                isBuyMode 
                ? 'bg-emerald-600 outline-emerald-400 outline-[2.39px]' 
                : 'bg-transparent'
              }`}
            >
              <div className="h-5 flex justify-center items-center gap-2.5">
                <div className={`justify-start text-base font-normal leading-normal ${isBuyMode ? 'text-indigo-50' : 'text-emerald-500'}`}>Buy</div>
              </div>
            </button>
            <button
              onClick={() => setIsBuyMode(false)}
              className={`p-2.5 rounded flex justify-center items-center overflow-hidden transition-all duration-200 ${
                !isBuyMode 
                ? 'bg-red-600 outline-red-400' 
                : 'bg-transparent'
              }`}
            >
              <div className="h-5 flex justify-center items-center gap-2.5">
                <div className={`justify-start text-base font-normal leading-normal ${!isBuyMode ? 'text-indigo-50' : 'text-white'}`}>Sell</div>
              </div>
            </button>
          </div>
        </div>

        <div className="w-full inline-flex flex-col lg:flex-row justify-start items-start gap-5">
          <div className="w-full lg:w-auto inline-flex flex-col justify-start items-start gap-5">
            <div className="w-full lg:w-[638px] flex flex-col justify-start items-start gap-6">
              {/* Market Section */}
              <div className="inline-flex justify-start items-center gap-4">
                <div data-active="Yes" data-type="Radio" className="w-6 h-6 relative">
                  <div className="w-6 h-6 left-0 top-0 absolute bg-gray-800 rounded-full border-[1.50px] border-White" />
                  <div className="w-3 h-3 left-[6px] top-[6px] absolute bg-White rounded-full" />
                </div>
                <div className="justify-center text-white text-xl font-bold leading-7">Market</div>
              </div>

              {/* Market Content */}
              <div className="self-stretch p-4 md:p-6 rounded-xl outline outline-offset-[-1px] outline-slate-600 flex flex-col justify-start items-start gap-2.5">
                {/* ... Market content ... */}
              </div>

              {/* Price Section */}
              <div className="inline-flex justify-start items-center gap-4">
                <div data-active="Yes" data-type="Radio" className="w-6 h-6 relative">
                  <div className="w-6 h-6 left-0 top-0 absolute bg-gray-800 rounded-full border-[1.50px] border-White" />
                  <div className="w-3 h-3 left-[6px] top-[6px] absolute bg-White rounded-full" />
                </div>
                <div className="justify-center text-white text-xl font-bold leading-7">Price</div>
              </div>

              {/* Price Content */}
              <div className="self-stretch p-4 md:p-6 rounded-xl outline outline-offset-[-1px] outline-slate-600 flex flex-col justify-start items-start gap-2.5">
                {/* ... Price content ... */}
              </div>

              {/* Payment Section */}
              <div className="inline-flex justify-start items-center gap-4">
                <div data-active="Yes" data-type="Radio" className="w-6 h-6 relative">
                  <div className="w-6 h-6 left-0 top-0 absolute bg-gray-800 rounded-full border-[1.50px] border-White" />
                  <div className="w-3 h-3 left-[6px] top-[6px] absolute bg-White rounded-full" />
                </div>
                <div className="justify-center text-white text-xl font-bold leading-7">Payment</div>
              </div>

              {/* Payment Content */}
              <div className="self-stretch p-4 md:p-6 rounded-xl outline outline-offset-[-1px] outline-slate-600 flex flex-col justify-start items-start gap-2.5">
                {/* ... Payment content ... */}
              </div>
            </div>
          </div>

          {/* Summary Card */}
          <div data-property-1="Buy-card-fixed price" className="w-full lg:w-96 p-4 md:p-6 bg-neutral-800 rounded-lg inline-flex flex-col justify-start items-start gap-2.5 sticky top-0">
            <div className="self-stretch flex flex-col justify-start items-start gap-4">
              <div className="self-stretch inline-flex justify-between items-center">
                <div className="flex-1 flex justify-start items-center gap-1">
                  <div className={`text-center justify-center text-xl font-bold leading-7 ${isBuyMode ? 'text-green-700' : 'text-red-700'}`}>
                    {isBuyMode ? 'Buy' : 'Sell'}
                  </div>
                  <div className="text-center justify-center text-gray-50 text-xl font-extrabold leading-7">USDT</div>
                </div>
              </div>
              {/* ... Summary card content ... */}
            </div>
            <button 
              onClick={handleConfirmPublishing}
              className="self-stretch px-4 py-2 bg-slate-600 hover:bg-slate-700 transition-colors duration-200 cursor-pointer rounded-lg flex flex-col justify-center items-center gap-2.5 overflow-hidden"
            >
              <div className="inline-flex justify-center items-center gap-2">
                <div className="text-center justify-center text-white text-sm font-semibold leading-tight">Confirm publishing</div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </PagesWrapper>
  );
}

export default PostAdd; 